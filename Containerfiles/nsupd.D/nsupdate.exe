#!/bin/bash

DEFAULT_ZONE_TYPE="docker"
DEFAULT_ZONE_TYPE="virsh"


export char="========================================================================"


declare -a arr
at=0
arr_size=0
temp_value=""


for arg in "$@" ; do
	arr[$at]="$arg"
	let at++
done

arr_size="$at"
at=0

while [ $at -le $arr_size ] ; do
	let temp_value="${at}+1"
	to_low=`echo "${arr[$at]}" | tr '[A-Z]' '[a-z]' `
	{ test  "$to_low" == "--zone" || test  "$to_low" == "--zonetype" || test  "$to_low" == "--zone-type" || test  "$to_low" == "--zone_type" ; } && ZONE_TYPE="${arr[$temp_value]}"
	let at++
done


test "$ZONE_TYPE" == "" && ZONE_TYPE="$DEFAULT_ZONE_TYPE"


ADD=""
## if [ "$1" == "" ] || [ "$1" == "start" ] ; then
	__IP="`ip -4 ad | grep \"^[0-9][0-9]*\" | grep -v \"^[0-9][0-9]*:[ ]*lo:\"  | head -n 1 | cut -d ':' -f2 | cut -d '@' -f1 | xargs ip -4 ad sh | grep -w inet | { read a b c ; printf \"$b\" | cut -d '/' -f1 ; } `"
	ADD="update add `hostname`.${ZONE_TYPE} 86400 A ${__IP}"
	__IP_VIRSH=`echo "${__IP}" | cut -d '.'  -f4`
	__IP_1=`echo "${__IP}" | cut -d '.'  -f1`
	__IP_2=`echo "${__IP}" | cut -d '.'  -f2`
	__IP_3=`echo "${__IP}" | cut -d '.'  -f3`
	__IP_4=`echo "${__IP}" | cut -d '.'  -f4`
	__IP_PODMAN="${__IP_4}.${__IP_3}"
	__IP_DOCKER=${__IP_PODMAN}
	ADD_REVERSE="update add ${__IP_4}.${__IP_3}.${__IP_2}.${__IP_1}.in-addr.arpa 86400 PTR"
	ADD_PODMAN="${ADD_REVERSE} `hostname`.podman."
	ADD_DOCKER="${ADD_REVERSE} `hostname`.docker."
	ADD_VIRSH="${ADD_REVERSE} `hostname`.virsh."
## fi

#122.168.192.in-addr.arpa
test "$ZONE_TYPE" == "docker" && { PTR_ADD="${ADD_DOCKER}" ; _IP_DELETE=${__IP_DOCKER} ; _IP_DELETE_ZONE="${__IP_2}.${__IP_1}.in-addr.arpa" ; }
test "$ZONE_TYPE" == "podman" && { PTR_ADD="${ADD_PODMAN}" ; _IP_DELETE=${__IP_PODMAN} ; _IP_DELETE_ZONE="${__IP_2}.${__IP_1}.in-addr.arpa" ; }
test "$ZONE_TYPE" == "virsh"  && { PTR_ADD="${ADD_VIRSH}"  ; _IP_DELETE=${__IP_VIRSH}  ; _IP_DELETE_ZONE="${__IP_3}.${__IP_2}.${__IP_1}.in-addr.arpa" ; }

echo $ADD
echo $PTR_ADD

##exit


SEND_A="server 10.88.0.1
update delete `hostname`.${ZONE_TYPE} A
$ADD
send
"

SEND_PTR="server 10.88.0.1
update delete ${_IP_DELETE}.${_IP_DELETE_ZONE} PTR
$PTR_ADD
send"

printf "SEND_A = \n${char}\n$SEND_A\n\n${char}\n\nSEND_PTR = \n${char}\n${SEND_PTR}\n\n"





(
date ; printf "${char}\n"

nsupdate << EOF
$SEND_A
EOF

printf "\n${char}\n${char}\n\n\n"

) ##  >> /var/log/NSUPDATE 2>&1

(
date ; printf "${char}\n"

nsupdate << EOF
$SEND_PTR
EOF

printf "\n${char}\n${char}\n\n\n"

) ## >> /var/log/NSUPDATE 2>&1




{ which nsupdate ; echo "`date` : S-a rulat asta ???" ; } >> /tmp/s-a_rulat_asta 2>&1 
